{"name":"goTrade","tagline":"a FIX protocol electronic trading and order management system written in Golang, structured for typical multi-asset instituional use","body":"# GoTrade\r\n\r\n> GoTrade is a **FIX** protocol electronic trading and order management system written in Golang, structured for typical multi-asset instituional use\r\n\r\n<p align=\"center\">\r\n  <img src=\"https://cdn.rawgit.com/cyanly/gotrade/gh-pages/orderrouting.svg\" alt=\"\"/>\r\n</p>\r\n\r\n[![GoDoc](https://godoc.org/github.com/cyanly/gotrade?status.png)](https://godoc.org/github.com/cyanly/gotrade) [![Build Status](https://travis-ci.org/quickfixgo/quickfix.svg?branch=master)](https://travis-ci.org/quickfixgo/quickfix)\r\n\r\n## Status\r\nThis project is currently more of a proof of concept. It is no where near in completeness of a commerical product. This public repo serves as mostly for the purpose of experimenting and share of ideas.\r\n\r\n## Getting Started\r\n```\r\n$ go get github.com/cyanly/gotrade\r\n```\r\n\r\n## Features\r\n\r\n- [x] Trade in real-time via FIX through the broker-neutral API.\r\n- [x] Normalized FIX order flow behavior across multiple FIX versions and asset classes.\r\n- [x] Pure Go.\r\n  - [x] Platform neutral: write once, build for any operating systems and arch (Linux/Windows/OSX etc).\r\n  - [x] Native code performance.\r\n  - [x] Ease of deployment.\r\n  - [x] Lack of OOP verbosity, works for small and big teams.\r\n- [x] Protobuf.\r\n  - [x] Binary encoding format, efficient yet extensible.\r\n  - [x] Easy Language Interoperability (C++, Python, Java, C#, Javascript, etc).\r\n  - [x] Protocol backward compatibility.\r\n\r\n## Design\r\n```\r\n└─ gotrade/\r\n   ├─ core/                 -> The low-level API that gives consumers all the knobs they need\r\n   │  ├─ order/\r\n   │  │  └─ execution/\r\n   │  ├─ service/\r\n   └─ proto/...             -> Protobuf messaging protocol of various entities\r\n   └─ services/             -> Core services managing multi-asset order flow\r\n   │  ├─ orderrouter/       -> Centralized management facility for multi-asset global order flow\r\n   │  ├─ marketconnectors/  -> Managing FIX connection to each trading venue, also performs pre-trade risk checks\r\n   │\r\n   └─cmd/...                -> Command-line executables, binary build targets\r\n   \r\n```\r\n\r\n\r\n## Examples\r\n**OrderRouter** and **MarketConnector** test cases will mock a testdb and messaging bus for end-to-end, message to message test. \r\n\r\nPre-Requisites:\r\n  - Go 1.3 or higher\r\n  - ``` go get github.com/erikstmartin/go-testdb ```\r\n\r\nRun test cases in services:\r\n```\r\n$ cd $GOPATH/src/github.com/cyanly/gotrade/services/orderrouter\r\n$ go test -v \r\n\r\n$ cd $GOPATH/src/github.com/cyanly/gotrade/services/marketconnectors/simulator\r\n$ go test -v \r\n```\r\n\r\n<p align=\"center\">\r\n  <img src=\"https://cdn.rawgit.com/cyanly/gotrade/gh-pages/servicestest.png\" alt=\"\"/>\r\n</p>\r\n\r\n## Benchmark\r\n\r\n\r\n## Limitations\r\n\r\n\r\n## Thanks\r\n\r\n**GoTrade** © 2016+, Chao Yan. Released under the [GNU] General Public License.<br>\r\nAuthored and maintained by Chao Yan with help from contributors ([list][contributors]).\r\n\r\n> [cyan.ly](http://cyan.ly) &nbsp;&middot;&nbsp;\r\n> GitHub [@cyanly](https://github.com/cyanly) &nbsp;&middot;&nbsp;\r\n\r\n[MIT]: http://www.gnu.org/licenses/gpl-3.0.en.html\r\n[contributors]: http://github.com/cyanly/gotrade/contributors\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}